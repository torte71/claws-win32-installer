#! /bin/sh
patch -p1 -l -f $* < $0
exit $?

Mingw64 version 4.x provides mkstemp(), remove it from gpgme sources.

diff -ruN gpgme-1.5.5-orig/src/w32-util.c gpgme-1.5.5/src/w32-util.c
--- gpgme-1.5.5-orig/src/w32-util.c	2015-10-16 00:16:10.416807459 +0200
+++ gpgme-1.5.5/src/w32-util.c	2015-10-16 00:16:25.885218522 +0200
@@ -584,100 +584,6 @@
 }
 #else
 
-/* mkstemp extracted from libc/sysdeps/posix/tempname.c.  Copyright
-   (C) 1991-1999, 2000, 2001, 2006 Free Software Foundation, Inc.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.  */
-
-static const char letters[] =
-"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
-
-/* Generate a temporary file name based on TMPL.  TMPL must match the
-   rules for mk[s]temp (i.e. end in "XXXXXX").  The name constructed
-   does not exist at the time of the call to mkstemp.  TMPL is
-   overwritten with the result.  */
-static int
-mkstemp (char *tmpl)
-{
-  int len;
-  char *XXXXXX;
-  static uint64_t value;
-  uint64_t random_time_bits;
-  unsigned int count;
-  int fd = -1;
-  int save_errno = errno;
-
-  /* A lower bound on the number of temporary files to attempt to
-     generate.  The maximum total number of temporary file names that
-     can exist for a given template is 62**6.  It should never be
-     necessary to try all these combinations.  Instead if a reasonable
-     number of names is tried (we define reasonable as 62**3) fail to
-     give the system administrator the chance to remove the problems.  */
-#define ATTEMPTS_MIN (62 * 62 * 62)
-
-  /* The number of times to attempt to generate a temporary file.  To
-     conform to POSIX, this must be no smaller than TMP_MAX.  */
-#if ATTEMPTS_MIN < TMP_MAX
-  unsigned int attempts = TMP_MAX;
-#else
-  unsigned int attempts = ATTEMPTS_MIN;
-#endif
-
-  len = strlen (tmpl);
-  if (len < 6 || strcmp (&tmpl[len - 6], "XXXXXX"))
-    {
-      gpg_err_set_errno (EINVAL);
-      return -1;
-    }
-
-  /* This is where the Xs start.  */
-  XXXXXX = &tmpl[len - 6];
-
-  /* Get some more or less random data.  */
-  {
-    FILETIME ft;
-
-    GetSystemTimeAsFileTime (&ft);
-    random_time_bits = (((uint64_t)ft.dwHighDateTime << 32)
-                        | (uint64_t)ft.dwLowDateTime);
-  }
-  value += random_time_bits ^ ath_self ();
-
-  for (count = 0; count < attempts; value += 7777, ++count)
-    {
-      uint64_t v = value;
-
-      /* Fill in the random bits.  */
-      XXXXXX[0] = letters[v % 62];
-      v /= 62;
-      XXXXXX[1] = letters[v % 62];
-      v /= 62;
-      XXXXXX[2] = letters[v % 62];
-      v /= 62;
-      XXXXXX[3] = letters[v % 62];
-      v /= 62;
-      XXXXXX[4] = letters[v % 62];
-      v /= 62;
-      XXXXXX[5] = letters[v % 62];
-
-      fd = open (tmpl, O_RDWR | O_CREAT | O_EXCL, S_IRUSR | S_IWUSR);
-      if (fd >= 0)
-	{
-	  gpg_err_set_errno (save_errno);
-	  return fd;
-	}
-      else if (errno != EEXIST)
-	return -1;
-    }
-
-  /* We got out of the loop because we ran out of combinations to try.  */
-  gpg_err_set_errno (EEXIST);
-  return -1;
-}
-
 
 int
 _gpgme_mkstemp (int *fd, char **name)

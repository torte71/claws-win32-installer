#! /bin/sh
patch -p1 -f $* < $0
exit $?

diff -urN a/config.h.in b/config.h.in
--- a/config.h.in	2014-08-12 22:40:29.822315600 +0100
+++ b/config.h.in	2014-08-12 22:40:30.607360500 +0100
@@ -606,11 +606,12 @@
 #define HIER_DELIMITER '/'
 #endif
 
-#ifdef WIN32
-#define SASL_ROOT_KEY "SOFTWARE\\Carnegie Mellon\\Project Cyrus\\SASL Library"
-#define SASL_PLUGIN_PATH_ATTR "SearchPath"
-#define SASL_CONF_PATH_ATTR "ConfFile"
-
+#ifdef(WIN32)
+# ifndef(DISABLE_WIN32_REGISTRY)
+#  define SASL_ROOT_KEY "SOFTWARE\\Carnegie Mellon\\Project Cyrus\\SASL Library"
+#  define SASL_PLUGIN_PATH_ATTR "SearchPath"
+#  define SASL_CONF_PATH_ATTR "ConfFile"
+# endif
 #include <windows.h>
 inline static unsigned int sleep(unsigned int seconds) {
        Sleep(seconds * 1000);
diff -urN a/configure.in b/configure.in
--- a/configure.in	2014-08-12 22:40:29.904320200 +0100
+++ b/configure.in	2014-08-12 22:40:30.608360500 +0100
@@ -188,6 +188,15 @@
   JAVAH=`echo "$JAVAH" | sed 's,.*/,,'`
 fi
 
+AC_ARG_ENABLE(win32-reg,
+	[  --disable-win32-reg     store settings in files, not win32 registry [[no]]],
+	[disable_reg=yes],
+	[disable_reg=no])
+
+if test "$disable_reg" = yes; then
+  AC_DEFINE(DISABLE_WIN32_REGISTRY,[],[Should we store settings in files instead of Win32 registry?])
+fi
+
 AM_CONDITIONAL(SAMPLE, test "$enable_sample" = yes)
 
 dnl call before we do the berkeley DB checks
diff -urN a/lib/common.c b/lib/common.c
--- a/lib/common.c	2014-08-12 22:40:29.926321500 +0100
+++ b/lib/common.c	2014-08-12 22:40:30.610360600 +0100
@@ -76,7 +76,7 @@
 static int _sasl_getconfpath(void *context __attribute__((unused)), char ** path);
 static int _sasl_getconfpath_simple(void *context __attribute__((unused)), const char **path);
 
-#if !defined(WIN32)
+#if !defined(WIN32) || defined(DISABLE_WIN32_REGISTRY)
 static char * _sasl_get_default_unix_path(void *context __attribute__((unused)),
                             char * env_var_name, char * default_value);
 #else
@@ -1571,7 +1571,7 @@
 _sasl_getpath(void *context __attribute__((unused)),
               const char ** path_dest)
 {
-#if !defined(WIN32)
+#if !defined(WIN32) || defined(DISABLE_WIN32_REGISTRY)
     char *path;
 #endif
     int res = SASL_OK;
@@ -1583,7 +1583,7 @@
     /* Only calculate the path once. */
     if (default_plugin_path == NULL) {
 
-#if defined(WIN32)
+#if defined(WIN32) && !defined(DISABLE_WIN32_REGISTRY)
         /* NB: On Windows platforms this value is always allocated */
         default_plugin_path = _sasl_get_default_win_path(context,
                                                          SASL_PLUGIN_PATH_ATTR,
@@ -1626,7 +1626,7 @@
 _sasl_getconfpath(void *context __attribute__((unused)),
                   char ** path_dest)
 {
-#if !defined(WIN32)
+#if !defined(WIN32) || defined(DISABLE_WIN32_REGISTRY)
     char *path;
 #endif
     int res = SASL_OK;
@@ -1638,7 +1638,7 @@
   /* Only calculate the path once. */
     if (default_conf_path == NULL) {
 
-#if defined(WIN32)
+#if defined(WIN32) && !defined(DISABLE_WIN32_REGISTRY)
         /* NB: On Windows platforms this value is always allocated */
         default_conf_path = _sasl_get_default_win_path(context,
                                                        SASL_CONF_PATH_ATTR,
@@ -2431,7 +2431,25 @@
     return (strncasecmp(req_mech, plug_mech, n) == 0);
 }
 
-#ifndef WIN32
+#if !defined(WIN32) || defined(DISABLE_WIN32_REGISTRY)
+#if defined(WIN32)
+int getuid()
+{
+    return 0;
+}
+int geteuid()
+{
+    return 0; /* If same value as getuid() doesn't prohibit getenv() */
+}
+int getgid()
+{
+    return 0;
+}
+int getegid()
+{
+    return 0; /* If same value as getgid() doesn't prohibit getenv() */
+}
+#endif
 static char *
 _sasl_get_default_unix_path(void *context __attribute__((unused)),
                             char * env_var_name,

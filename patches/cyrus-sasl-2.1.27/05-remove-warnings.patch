#! /bin/sh
patch -p1 -f $* < $0
exit $?



From: David Rothenberger <daveroth@acm.org>


---
 lib/checkpw.c              |    4 ++--
 lib/common.c               |    4 ++--
 plugins/sasldb.c           |    2 +-
 plugins/scram.c            |    8 ++++----
 saslauthd/saslauthd-main.c |    2 +-
 utils/dbconverter-2.c      |    2 +-
 utils/pluginviewer.c       |   10 +++++-----
 7 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/lib/checkpw.c b/lib/checkpw.c
index d371f3f..1afc207 100644
--- a/lib/checkpw.c
+++ b/lib/checkpw.c
@@ -659,7 +659,7 @@ static int saslauthd_verify_password(sasl_conn_t *conn,
 #endif
 
     /* check to see if the user configured a rundir */
-    if (_sasl_getcallback(conn, SASL_CB_GETOPT, &getopt, &context) == SASL_OK) {
+    if (_sasl_getcallback(conn, SASL_CB_GETOPT, (int (**)(void)) &getopt, &context) == SASL_OK) {
 	getopt(context, NULL, "saslauthd_path", &p, NULL);
     }
     if (p) {
@@ -1041,7 +1041,7 @@ static int authdaemon_verify_password(sasl_conn_t *conn,
     int sock = -1;
 
     /* check to see if the user configured a rundir */
-    if (_sasl_getcallback(conn, SASL_CB_GETOPT, &getopt, &context) == SASL_OK) {
+    if (_sasl_getcallback(conn, SASL_CB_GETOPT, (int (**)(void)) &getopt, &context) == SASL_OK) {
 	getopt(context, NULL, "authdaemond_path", &p, NULL);
     }
     if (!p) {
diff --git a/lib/common.c b/lib/common.c
index e0f59eb..65abb9f 100644
--- a/lib/common.c
+++ b/lib/common.c
@@ -1046,10 +1046,10 @@ int sasl_getprop(sasl_conn_t *conn, int propnum, const void **pvalue)
   case SASL_GSS_CREDS:
       if(conn->type == SASL_CONN_CLIENT)
 	  *(void **)pvalue = 
-              ((sasl_client_conn_t *)conn)->cparams->gss_creds;
+              (void *)((sasl_client_conn_t *)conn)->cparams->gss_creds;
       else
 	  *(void **)pvalue = 
-              ((sasl_server_conn_t *)conn)->sparams->gss_creds;
+              (void *)((sasl_server_conn_t *)conn)->sparams->gss_creds;
       break;
   case SASL_HTTP_REQUEST: {
       if (conn->type == SASL_CONN_SERVER)
diff --git a/plugins/sasldb.c b/plugins/sasldb.c
index 1edbb8b..e4b5e7c 100644
--- a/plugins/sasldb.c
+++ b/plugins/sasldb.c
@@ -248,7 +248,7 @@ static int sasldb_auxprop_store(void *glob_context __attribute__((unused)),
 
     ret = SASL_OK;
     for (cur = to_store; cur->name; cur++) {
-	char * value = (cur->values && cur->values[0]) ? cur->values[0] : NULL;
+	const char * value = (cur->values && cur->values[0]) ? cur->values[0] : NULL;
 
 	if (cur->name[0] == '*') {
 	    continue;
diff --git a/plugins/scram.c b/plugins/scram.c
index 62a101c..1381183 100644
--- a/plugins/scram.c
+++ b/plugins/scram.c
@@ -789,7 +789,7 @@ scram_server_mech_step1(server_context_t *text,
 			       /* Different SCRAM hashes can have different strengh */
 			       SCRAM_SASL_MECH,
 			       "scram_iteration_counter",
-			       &s_iteration_count,
+			       (const char **) &s_iteration_count,
 			       NULL);
 
 	if (s_iteration_count != NULL) {
@@ -1572,7 +1572,7 @@ static int scram_setpass(void *glob_context __attribute__((unused)),
 			       /* Different SCRAM hashes can have different strengh */
 			       SCRAM_SASL_MECH,
 			       "scram_iteration_counter",
-			       &s_iteration_count,
+			       (const char **) &s_iteration_count,
 			       NULL);
 
 	if (s_iteration_count != NULL) {
@@ -1989,7 +1989,7 @@ scram_client_mech_step1(client_context_t *text,
 
     if (userid != NULL && *userid != '\0') {
 	result = encode_saslname (oparams->user,
-				  &encoded_authorization_id,
+				  (const char **) &encoded_authorization_id,
 				  &freeme2);
 
 	if (result != SASL_OK) {
@@ -2000,7 +2000,7 @@ scram_client_mech_step1(client_context_t *text,
     }
 
     result = encode_saslname (oparams->authid,
-			      &encoded_authcid,
+			      (const char **) &encoded_authcid,
 			      &freeme);
     if (result != SASL_OK) {
 	MEMERROR( params->utils );
diff --git a/saslauthd/saslauthd-main.c b/saslauthd/saslauthd-main.c
index 5d9ca8a..7ebff08 100644
--- a/saslauthd/saslauthd-main.c
+++ b/saslauthd/saslauthd-main.c
@@ -139,7 +139,11 @@ int		num_procs = 5;		/* The max number of worker processes*/
 /****************************************
  * module globals
 *****************************************/
+#if defined(__MSYS__) || defined(__CYGWIN__)
+extern char __declspec(dllimport)	*optarg;		/* For getopt()                          */
+#else
 extern char 	*optarg;		/* For getopt()                          */
+#endif
 static int     	master_pid;		/* Pid of the master process             */
 static int 	pid_fd;                 /* Descriptor to the open pid file       */
 static int 	pid_file_lock_fd; 		/* Descriptor to the open pid lock file  */
diff --git a/utils/dbconverter-2.c b/utils/dbconverter-2.c
index 04df2cb..33e18fb 100644
--- a/utils/dbconverter-2.c
+++ b/utils/dbconverter-2.c
@@ -376,7 +376,7 @@ int good_getopt(void *context __attribute__((unused)),
 }
 
 static struct sasl_callback goodsasl_cb[] = {
-    { SASL_CB_GETOPT, &good_getopt, NULL },
+    { SASL_CB_GETOPT, (int (*)(void))&good_getopt, NULL },
     { SASL_CB_LIST_END, NULL, NULL }
 };
 
diff --git a/utils/pluginviewer.c b/utils/pluginviewer.c
index 3164acd..bec2b2a 100644
--- a/utils/pluginviewer.c
+++ b/utils/pluginviewer.c
@@ -209,8 +209,8 @@ getpath(void *context,
 
 static int
 plugview_sasl_getopt (
-    void *context,
-    const char *plugin_name,
+    __attribute__((unused)) void *context,
+    __attribute__((unused)) const char *plugin_name,
     const char *option,
     const char **result,
     unsigned *len
@@ -422,7 +422,7 @@ main(int argc, char *argv[])
         case 'b':
             options = optarg;
             while (*options != '\0') {
-	        switch(getsubopt(&options, (const char * const *)bit_subopts, &value)) {
+	        switch(getsubopt(&options, (char * const *)bit_subopts, &value)) {
 	        case OPT_MIN:
                     if (! value) {
 	                errflag = 1;
@@ -447,7 +447,7 @@ main(int argc, char *argv[])
         case 'e':
             options = optarg;
             while (*options != '\0') {
-	        switch(getsubopt(&options, (const char * const *)ext_subopts, &value)) {
+	        switch(getsubopt(&options, (char * const *)ext_subopts, &value)) {
 	        case OPT_EXT_SSF:
                     if (! value) {
 	                errflag = 1;
@@ -476,7 +476,7 @@ main(int argc, char *argv[])
         case 'f':
             options = optarg;
             while (*options != '\0') {
-	        switch(getsubopt(&options, (const char * const *)flag_subopts, &value)) {
+	        switch(getsubopt(&options, (char * const *)flag_subopts, &value)) {
 	        case OPT_NOPLAIN:
 	            secprops.security_flags |= SASL_SEC_NOPLAINTEXT;
 	            break;

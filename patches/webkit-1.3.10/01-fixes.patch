#! /bin/sh
#Fix webkit build issues. Patch partially from OpenSUSE Factory's mingw32-webkitgtk

patch -p1 -f $* < $0 && autoreconf --verbose --install -I Source/autotools
exit $?

diff -ur webkit-1.3.10-orig/Source/JavaScriptCore/API/JSStringRef.cpp webkit-1.3.10/Source/JavaScriptCore/API/JSStringRef.cpp
--- webkit-1.3.10-orig/Source/JavaScriptCore/API/JSStringRef.cpp	2015-06-12 11:00:07.605530498 +0200
+++ webkit-1.3.10/Source/JavaScriptCore/API/JSStringRef.cpp	2015-06-13 19:50:11.844809509 +0200
@@ -36,7 +36,7 @@
 JSStringRef JSStringCreateWithCharacters(const JSChar* chars, size_t numChars)
 {
     initializeThreading();
-    return OpaqueJSString::create(chars, numChars).leakRef();
+    return OpaqueJSString::create(reinterpret_cast<const UChar*>(chars), numChars).leakRef();
 }
 
 JSStringRef JSStringCreateWithUTF8CString(const char* string)
@@ -72,7 +72,7 @@
 
 const JSChar* JSStringGetCharactersPtr(JSStringRef string)
 {
-    return string->characters();
+    return reinterpret_cast<const JSChar*>(string->characters());
 }
 
 size_t JSStringGetMaximumUTF8CStringSize(JSStringRef string)
diff -ur webkit-1.3.10-orig/Source/JavaScriptCore/wtf/gobject/GTypedefs.h webkit-1.3.10/Source/JavaScriptCore/wtf/gobject/GTypedefs.h
--- webkit-1.3.10-orig/Source/JavaScriptCore/wtf/gobject/GTypedefs.h	2015-06-12 11:00:07.593530169 +0200
+++ webkit-1.3.10/Source/JavaScriptCore/wtf/gobject/GTypedefs.h	2015-06-13 19:50:11.844809509 +0200
@@ -52,7 +52,7 @@
 typedef struct _GHashTable GHashTable;
 typedef struct _GInputStream GInputStream;
 typedef struct _GList GList;
-typedef struct _GMutex GMutex;
+typedef union _GMutex GMutex;
 typedef struct _GOutputStream GOutputStream;
 typedef struct _GPatternSpec GPatternSpec;
 typedef struct _GSocketClient GSocketClient;
diff -ur webkit-1.3.10-orig/Source/WebCore/bindings/js/JSCustomSQLStatementErrorCallback.cpp webkit-1.3.10/Source/WebCore/bindings/js/JSCustomSQLStatementErrorCallback.cpp
--- webkit-1.3.10-orig/Source/WebCore/bindings/js/JSCustomSQLStatementErrorCallback.cpp	2015-06-12 11:00:07.541528746 +0200
+++ webkit-1.3.10/Source/WebCore/bindings/js/JSCustomSQLStatementErrorCallback.cpp	2015-06-13 19:50:11.844809509 +0200
@@ -27,10 +27,10 @@
  */
 
 #include "config.h"
-#include "JSSQLStatementErrorCallback.h"
 
 #if ENABLE(DATABASE)
 
+#include "JSSQLStatementErrorCallback.h"
 #include "JSSQLError.h"
 #include "JSSQLTransaction.h"
 #include "ScriptExecutionContext.h"
diff -ur webkit-1.3.10-orig/Source/WebCore/bindings/js/JSDOMWindowCustom.cpp webkit-1.3.10/Source/WebCore/bindings/js/JSDOMWindowCustom.cpp
--- webkit-1.3.10-orig/Source/WebCore/bindings/js/JSDOMWindowCustom.cpp	2015-06-12 11:00:07.541528746 +0200
+++ webkit-1.3.10/Source/WebCore/bindings/js/JSDOMWindowCustom.cpp	2015-06-13 20:51:53.011166319 +0200
@@ -199,11 +199,6 @@
                     slot.setCustom(this, nonCachingStaticFunctionGetter<jsDOMWindowPrototypeFunctionFocus, 0>);
                     return true;
                 }
-            } else if (entry->function() == jsDOMWindowPrototypeFunctionPostMessage) {
-                if (!allowsAccess) {
-                    slot.setCustom(this, nonCachingStaticFunctionGetter<jsDOMWindowPrototypeFunctionPostMessage, 2>);
-                    return true;
-                }
             } else if (entry->function() == jsDOMWindowPrototypeFunctionShowModalDialog) {
                 if (!DOMWindow::canShowModalDialog(impl()->frame())) {
                     slot.setUndefined();
diff -ur webkit-1.3.10-orig/Source/WebCore/bindings/scripts/CodeGeneratorJS.pm webkit-1.3.10/Source/WebCore/bindings/scripts/CodeGeneratorJS.pm
--- webkit-1.3.10-orig/Source/WebCore/bindings/scripts/CodeGeneratorJS.pm	2015-06-12 11:00:07.553529074 +0200
+++ webkit-1.3.10/Source/WebCore/bindings/scripts/CodeGeneratorJS.pm	2015-06-13 19:50:23.377118941 +0200
@@ -744,6 +744,52 @@
     push(@headerContent, "    virtual const JSC::ClassInfo* classInfo() const { return &s_info; }\n");
     push(@headerContent, "    static const JSC::ClassInfo s_info;\n\n");
 
+    if ($interfaceName eq "CanvasRenderingContext2D") {
+  		push(@headerContent, "    JSC::JSValue strokeStyle(JSC::ExecState*) const;\n");
+      push(@headerContent, "    void setStrokeStyle(JSC::ExecState*, JSC::JSValue);\n");
+      push(@headerContent, "    JSC::JSValue fillStyle(JSC::ExecState*) const;\n");
+      push(@headerContent, "    void setFillStyle(JSC::ExecState*, JSC::JSValue);\n");
+      push(@headerContent, "    JSC::JSValue setFillColor(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue setStrokeColor(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue strokeRect(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue drawImage(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue drawImageFromRect(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue setShadow(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue createPattern(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue createImageData(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue putImageData(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue fillText(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue strokeText(JSC::ExecState*);\n\n");
+ 		}
+
+		if ($interfaceName eq "DOMWindow") {
+      push(@headerContent, "    JSC::JSValue image(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue option(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue webKitPoint(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue webKitCSSMatrix(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue arrayBuffer(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue int8Array(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue uint8Array(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue int32Array(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue uint32Array(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue int16Array(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue uint16Array(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue float32Array(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue dataView(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue xmlHttpRequest(JSC::ExecState*) const;\n");
+      push(@headerContent, "    JSC::JSValue postMessage(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue setTimeout(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue setInterval(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue addEventListener(JSC::ExecState*);\n");
+      push(@headerContent, "    JSC::JSValue removeEventListener(JSC::ExecState*);\n\n");
+		}
+
+		if ($interfaceName eq "Document") {
+      push(@headerContent, "    JSC::JSValue location(JSC::ExecState*) const;\n");
+			push(@headerContent, "    void setLocation(JSC::ExecState*, JSC::JSValue);\n");
+		}
+
+
     # Structure ID
     if ($interfaceName eq "DOMWindow") {
         $structureFlags{"JSC::ImplementsHasInstance"} = 1;
diff -ur webkit-1.3.10-orig/Source/WebCore/bindings/scripts/IDLParser.pm webkit-1.3.10/Source/WebCore/bindings/scripts/IDLParser.pm
--- webkit-1.3.10-orig/Source/WebCore/bindings/scripts/IDLParser.pm	2015-06-12 11:00:07.549528965 +0200
+++ webkit-1.3.10/Source/WebCore/bindings/scripts/IDLParser.pm	2015-06-13 19:50:11.844809509 +0200
@@ -73,9 +73,9 @@
         } elsif (($Config::Config{'osname'}) =~ /solaris/i) {
             $gccLocation = "/usr/sfw/bin/gcc";
         } else {
-            $gccLocation = "/usr/bin/gcc";
+            $gccLocation = "/usr/bin/i686-w64-mingw32-gcc";
         }
-        $preprocessor = $gccLocation . " -E -P -x c++";
+        $preprocessor = $gccLocation . " -E -x c++";
     }
 
     if (!$defines) {
diff -ur webkit-1.3.10-orig/Source/WebCore/css/CSSGrammar.y webkit-1.3.10/Source/WebCore/css/CSSGrammar.y
--- webkit-1.3.10-orig/Source/WebCore/css/CSSGrammar.y	2015-06-12 11:00:07.505527761 +0200
+++ webkit-1.3.10/Source/WebCore/css/CSSGrammar.y	2015-06-14 11:00:12.586339711 +0200
@@ -52,13 +52,13 @@
 #define YYMAXDEPTH 10000
 #define YYDEBUG 0
 
-// FIXME: Replace with %parse-param { CSSParser* parser } once we can depend on bison 2.x
-#define YYPARSE_PARAM parser
-#define YYLEX_PARAM parser
 
 %}
 
-%pure_parser
+%parse-param { void *parser }
+%lex-param { void *parser }
+
+%pure-parser
 
 %union {
     bool boolean;
@@ -87,7 +87,7 @@
 
 %{
 
-static inline int cssyyerror(const char*)
+static inline int cssyyerror(void*, const char*)
 {
     return 1;
 }
diff -ur webkit-1.3.10-orig/Source/WebCore/css/CSSParser.cpp webkit-1.3.10/Source/WebCore/css/CSSParser.cpp
--- webkit-1.3.10-orig/Source/WebCore/css/CSSParser.cpp	2015-06-12 11:00:07.505527761 +0200
+++ webkit-1.3.10/Source/WebCore/css/CSSParser.cpp	2015-06-13 19:50:11.848809617 +0200
@@ -6344,5 +6344,3 @@
 #define BEGIN yy_start = 1 + 2 *
 
 #include "tokenizer.cpp"
-
-}
diff -ur webkit-1.3.10-orig/Source/WebCore/dom/make_names.pl webkit-1.3.10/Source/WebCore/dom/make_names.pl
--- webkit-1.3.10-orig/Source/WebCore/dom/make_names.pl	2015-06-12 11:00:07.565529403 +0200
+++ webkit-1.3.10/Source/WebCore/dom/make_names.pl	2015-06-13 19:50:11.848809617 +0200
@@ -63,9 +63,9 @@
 } elsif (($Config::Config{'osname'}) =~ /solaris/i) {
     $gccLocation = "/usr/sfw/bin/gcc";
 } else {
-    $gccLocation = "/usr/bin/gcc";
+    $gccLocation = "/usr/bin/i686-w64-mingw32-gcc";
 }
-my $preprocessor = $gccLocation . " -E -P -x c++";
+my $preprocessor = $gccLocation . " -E -x c++";
 
 GetOptions(
     'tags=s' => \$tagsFile, 
diff -ur webkit-1.3.10-orig/Source/WebCore/dom/Node.h webkit-1.3.10/Source/WebCore/dom/Node.h
--- webkit-1.3.10-orig/Source/WebCore/dom/Node.h	2015-06-12 11:00:07.565529403 +0200
+++ webkit-1.3.10/Source/WebCore/dom/Node.h	2015-06-14 11:00:34.882937573 +0200
@@ -145,8 +145,8 @@
     PassRefPtr<NodeList> childNodes();
     Node* firstChild() const;
     Node* lastChild() const;
-    bool hasAttributes() const;
-    NamedNodeMap* attributes() const;
+    virtual bool hasAttributes() const;
+    virtual NamedNodeMap* attributes() const;
 
     virtual KURL baseURI() const;
     
diff -ur webkit-1.3.10-orig/Source/WebCore/dom/XMLDocumentParserLibxml2.cpp webkit-1.3.10/Source/WebCore/dom/XMLDocumentParserLibxml2.cpp
--- webkit-1.3.10-orig/Source/WebCore/dom/XMLDocumentParserLibxml2.cpp	2015-06-12 11:00:07.561529293 +0200
+++ webkit-1.3.10/Source/WebCore/dom/XMLDocumentParserLibxml2.cpp	2015-06-13 19:50:11.848809617 +0200
@@ -936,7 +936,7 @@
     if (isStopped())
         return;
 
-#if COMPILER(MSVC) || COMPILER(RVCT)
+#if COMPILER(MSVC) || COMPILER(RVCT) || COMPILER(MINGW)
     char m[1024];
     vsnprintf(m, sizeof(m) - 1, message, args);
 #else
@@ -950,7 +950,7 @@
     else
         handleError(type, m, lineNumber(), columnNumber());
 
-#if !COMPILER(MSVC) && !COMPILER(RVCT)
+#if !COMPILER(MSVC) && !COMPILER(RVCT) && !COMPILER(MINGW)
     free(m);
 #endif
 }
diff -ur webkit-1.3.10-orig/Source/WebCore/inspector/InspectorController.cpp webkit-1.3.10/Source/WebCore/inspector/InspectorController.cpp
--- webkit-1.3.10-orig/Source/WebCore/inspector/InspectorController.cpp	2015-06-12 11:00:07.385524477 +0200
+++ webkit-1.3.10/Source/WebCore/inspector/InspectorController.cpp	2015-06-14 11:01:06.395782569 +0200
@@ -756,7 +756,7 @@
 
         if (m_frontend) {
             m_mainResourceIdentifier = 0;
-            m_frontend->didCommitLoad();
+            //m_frontend->didCommitLoad();
             m_domAgent->setDocument(m_inspectedPage->mainFrame()->document());
         }
     }
@@ -952,8 +952,6 @@
         return;
 
     m_timelineAgent = new InspectorTimelineAgent(m_frontend.get());
-    if (m_frontend)
-        m_frontend->timelineProfilerWasStarted();
 
     m_state->setBoolean(InspectorState::timelineProfilerEnabled, true);
 }
@@ -967,8 +965,6 @@
         return;
 
     m_timelineAgent = 0;
-    if (m_frontend)
-        m_frontend->timelineProfilerWasStopped();
 
     m_state->setBoolean(InspectorState::timelineProfilerEnabled, false);
 }
diff -ur webkit-1.3.10-orig/Source/WebCore/inspector/InspectorDOMAgent.cpp webkit-1.3.10/Source/WebCore/inspector/InspectorDOMAgent.cpp
--- webkit-1.3.10-orig/Source/WebCore/inspector/InspectorDOMAgent.cpp	2015-06-12 11:00:07.389524586 +0200
+++ webkit-1.3.10/Source/WebCore/inspector/InspectorDOMAgent.cpp	2015-06-14 11:01:28.984388277 +0200
@@ -258,8 +258,8 @@
         startListening(doc);
         if (doc->documentElement())
             pushDocumentToFrontend();
-    } else
-        m_frontend->setDocument(InspectorValue::null());
+    } //else
+    //    m_frontend->setDocument(InspectorValue::null());
 }
 
 void InspectorDOMAgent::releaseDanglingNodes()
@@ -302,17 +302,14 @@
         if (!frameOwnerId)
             return;
 
-        if (!m_childrenRequested.contains(frameOwnerId)) {
-            // No children are mapped yet -> only notify on changes of hasChildren.
-            m_frontend->childNodeCountUpdated(frameOwnerId, innerChildNodeCount(node));
-        } else {
+        if (m_childrenRequested.contains(frameOwnerId)) {
             // Re-add frame owner element together with its new children.
             long parentId = m_documentNodeToIdMap.get(innerParentNode(node));
-            m_frontend->childNodeRemoved(parentId, frameOwnerId);
+            //m_frontend->childNodeRemoved(parentId, frameOwnerId);
             RefPtr<InspectorObject> value = buildObjectForNode(node, 0, &m_documentNodeToIdMap);
             Node* previousSibling = innerPreviousSibling(node);
             long prevId = previousSibling ? m_documentNodeToIdMap.get(previousSibling) : 0;
-            m_frontend->childNodeInserted(parentId, prevId, value.release());
+            //m_frontend->childNodeInserted(parentId, prevId, value.release());
             // Invalidate children requested flag for the element.
             m_childrenRequested.remove(m_childrenRequested.find(frameOwnerId));
         }
@@ -362,8 +359,6 @@
     Document* document = mainFrameDocument();
     if (!document)
         return false;
-    if (!m_documentNodeToIdMap.contains(document))
-        m_frontend->setDocument(buildObjectForNode(document, 2, &m_documentNodeToIdMap));
     return true;
 }
 
@@ -378,7 +373,7 @@
     NodeToIdMap* nodeMap = m_idToNodesMap.get(nodeId);
     RefPtr<InspectorArray> children = buildArrayForContainerChildren(node, 1, nodeMap);
     m_childrenRequested.add(nodeId);
-    m_frontend->setChildNodes(nodeId, children.release());
+    //m_frontend->setChildNodes(nodeId, children.release());
 }
 
 long InspectorDOMAgent::inspectedNode(unsigned long num)
@@ -436,7 +431,7 @@
             // Node being pushed is detached -> push subtree root.
             danglingMap = new NodeToIdMap();
             m_danglingNodeToIdMaps.append(danglingMap);
-            m_frontend->setDetachedRoot(buildObjectForNode(node, 0, danglingMap));
+            //m_frontend->setDetachedRoot(buildObjectForNode(node, 0, danglingMap));
             break;
         } else {
             path.append(parent);
@@ -1075,15 +1070,12 @@
     if (!parentId)
         return;
 
-    if (!m_childrenRequested.contains(parentId)) {
-        // No children are mapped yet -> only notify on changes of hasChildren.
-        m_frontend->childNodeCountUpdated(parentId, innerChildNodeCount(parent));
-    } else {
+    if (m_childrenRequested.contains(parentId)) {
         // Children have been requested -> return value of a new child.
         Node* prevSibling = innerPreviousSibling(node);
         long prevId = prevSibling ? m_documentNodeToIdMap.get(prevSibling) : 0;
         RefPtr<InspectorObject> value = buildObjectForNode(node, 0, &m_documentNodeToIdMap);
-        m_frontend->childNodeInserted(parentId, prevId, value.release());
+        //m_frontend->childNodeInserted(parentId, prevId, value.release());
     }
 }
 
@@ -1116,13 +1108,13 @@
     if (m_domListener)
         m_domListener->didRemoveDOMNode(node);
 
-    if (!m_childrenRequested.contains(parentId)) {
-        // No children are mapped yet -> only notify on changes of hasChildren.
-        if (innerChildNodeCount(parent) == 1)
-            m_frontend->childNodeCountUpdated(parentId, 0);
-    } else
-        m_frontend->childNodeRemoved(parentId, m_documentNodeToIdMap.get(node));
-    unbind(node, &m_documentNodeToIdMap);
+//    if (!m_childrenRequested.contains(parentId)) {
+//       // No children are mapped yet -> only notify on changes of hasChildren.
+//        if (innerChildNodeCount(parent) == 1)
+//           m_frontend->childNodeCountUpdated(parentId, 0);
+//    } else
+//        m_frontend->childNodeRemoved(parentId, m_documentNodeToIdMap.get(node));
+//    unbind(node, &m_documentNodeToIdMap);
 }
 
 void InspectorDOMAgent::didModifyDOMAttr(Element* element)
@@ -1135,7 +1127,7 @@
     if (m_domListener)
         m_domListener->didModifyDOMAttr(element);
 
-    m_frontend->attributesUpdated(id, buildArrayForElementAttributes(element));
+//    m_frontend->attributesUpdated(id, buildArrayForElementAttributes(element));
 }
 
 void InspectorDOMAgent::characterDataModified(CharacterData* characterData)
@@ -1143,7 +1135,7 @@
     long id = m_documentNodeToIdMap.get(characterData);
     if (!id)
         return;
-    m_frontend->characterDataModified(id, characterData->data());
+//    m_frontend->characterDataModified(id, characterData->data());
 }
 
 bool InspectorDOMAgent::hasBreakpoint(Node* node, long type)
diff -ur webkit-1.3.10-orig/Source/WebCore/inspector/InspectorTimelineAgent.cpp webkit-1.3.10/Source/WebCore/inspector/InspectorTimelineAgent.cpp
--- webkit-1.3.10-orig/Source/WebCore/inspector/InspectorTimelineAgent.cpp	2015-06-12 11:00:07.389524586 +0200
+++ webkit-1.3.10/Source/WebCore/inspector/InspectorTimelineAgent.cpp	2015-06-14 11:01:46.816866458 +0200
@@ -217,7 +217,7 @@
     record->setObject("data", TimelineRecordFactory::createResourceSendRequestData(identifier, isMainResource, request));
     record->setNumber("type", ResourceSendRequestTimelineRecordType);
     setHeapSizeStatistic(record.get());
-    m_frontend->addRecordToTimeline(record.release());
+    addRecordToTimeline(record.release(), MarkTimelineRecordType);
 }
 
 void InspectorTimelineAgent::willReceiveResourceData(unsigned long identifier)
@@ -248,7 +248,7 @@
     record->setObject("data", TimelineRecordFactory::createResourceFinishData(identifier, didFail, finishTime * 1000));
     record->setNumber("type", ResourceFinishTimelineRecordType);
     setHeapSizeStatistic(record.get());
-    m_frontend->addRecordToTimeline(record.release());
+    addRecordToTimeline(record.release(), MarkTimelineRecordType);
 }
 
 void InspectorTimelineAgent::didMarkTimeline(const String& message)
@@ -291,7 +291,7 @@
     record->setNumber("type", type);
     setHeapSizeStatistic(record.get());
     if (m_recordStack.isEmpty())
-        m_frontend->addRecordToTimeline(record.release());
+        addRecordToTimeline(record.release(), MarkTimelineRecordType);
     else {
         TimelineRecordEntry parent = m_recordStack.last();
         parent.children->pushObject(record.release());
diff -ur webkit-1.3.10-orig/Source/WebCore/platform/graphics/WOFFFileFormat.cpp webkit-1.3.10/Source/WebCore/platform/graphics/WOFFFileFormat.cpp
--- webkit-1.3.10-orig/Source/WebCore/platform/graphics/WOFFFileFormat.cpp	2015-06-12 11:00:07.489527323 +0200
+++ webkit-1.3.10/Source/WebCore/platform/graphics/WOFFFileFormat.cpp	2015-06-13 19:50:11.848809617 +0200
@@ -43,7 +43,7 @@
 #define ntohs(x) std_ntohs(x)
 #endif
 
-#if PLATFORM(WIN)
+#if OS(WINDOWS)
 #if CPU(BIG_ENDIAN)
 #define ntohs(x) ((uint16_t)(x))
 #define htons(x) ((uint16_t)(x))
@@ -61,7 +61,7 @@
                  (((uint32_t)(x) & 0x0000ff00) <<  8) | (((uint32_t)(x) & 0x000000ff) << 24)))
 #define htonl(x) ntohl(x)
 #endif
-#endif // PLATFORM(WIN)
+#endif // OS(WINDOWS)
 
 namespace WebCore {
 
diff -ur webkit-1.3.10-orig/Source/WebCore/platform/gtk/FileSystemGtk.cpp webkit-1.3.10/Source/WebCore/platform/gtk/FileSystemGtk.cpp
--- webkit-1.3.10-orig/Source/WebCore/platform/gtk/FileSystemGtk.cpp	2015-06-12 11:00:07.497527542 +0200
+++ webkit-1.3.10/Source/WebCore/platform/gtk/FileSystemGtk.cpp	2015-06-13 19:50:11.848809617 +0200
@@ -122,7 +122,7 @@
     if (filename.isNull())
         return false;
 
-    struct stat statResult;
+    GStatBuf statResult;
     gint result = g_stat(filename.data(), &statResult);
     if (result != 0)
         return false;
@@ -137,7 +137,7 @@
     if (filename.isNull())
         return false;
 
-    struct stat statResult;
+    GStatBuf statResult;
     gint result = g_stat(filename.data(), &statResult);
     if (result != 0)
         return false;
@@ -324,6 +324,10 @@
 
 bool unloadModule(PlatformModule module)
 {
+#if OS(WINDOWS)
+    return ::FreeLibrary(module);
+#else
     return g_module_close(module);
+#endif
 }
 }
diff -ur webkit-1.3.10-orig/Source/WebCore/platform/network/soup/cache/soup-request-data.c webkit-1.3.10/Source/WebCore/platform/network/soup/cache/soup-request-data.c
--- webkit-1.3.10-orig/Source/WebCore/platform/network/soup/cache/soup-request-data.c	2015-06-12 11:00:07.477526995 +0200
+++ webkit-1.3.10/Source/WebCore/platform/network/soup/cache/soup-request-data.c	2015-06-13 19:50:11.848809617 +0200
@@ -129,9 +129,9 @@
 	return memstream;
 
  fail:
-	g_free (uristr);
 	g_set_error (error, WEBKIT_SOUP_ERROR, WEBKIT_SOUP_ERROR_BAD_URI,
-		     _ ("Unable to decode URI: %s"), start);
+		     _ ("Unable to decode URI: %s"), start ? start:"null");
+	g_free (uristr);
 	g_object_unref (memstream);
 	return NULL;
 }
diff -ur webkit-1.3.10-orig/Source/WebCore/platform/network/soup/cache/soup-request-file.c webkit-1.3.10/Source/WebCore/platform/network/soup/cache/soup-request-file.c
--- webkit-1.3.10-orig/Source/WebCore/platform/network/soup/cache/soup-request-file.c	2015-06-12 11:00:07.477526995 +0200
+++ webkit-1.3.10/Source/WebCore/platform/network/soup/cache/soup-request-file.c	2015-06-13 19:50:11.848809617 +0200
@@ -174,7 +174,10 @@
 			/* Do not use new_for_uri() as the decoded URI
 			 *  could not be a valid URI
 			 */
-			file->priv->gfile = g_file_new_for_path (decoded_uri);
+			if (strlen(decoded_uri) > 3 && decoded_uri[0] == '/' && decoded_uri[2] == ':')
+				file->priv->gfile = g_file_new_for_path (decoded_uri + 1);
+			else
+				file->priv->gfile = g_file_new_for_path (decoded_uri);
 			g_free (decoded_uri);
 		}
 
diff -ur webkit-1.3.10-orig/Source/WebCore/platform/UUID.cpp webkit-1.3.10/Source/WebCore/platform/UUID.cpp
--- webkit-1.3.10-orig/Source/WebCore/platform/UUID.cpp	2015-06-12 11:00:07.485527214 +0200
+++ webkit-1.3.10/Source/WebCore/platform/UUID.cpp	2015-06-13 19:50:11.848809617 +0200
@@ -65,7 +65,7 @@
     HRESULT hr = CoCreateGuid(&uuid);
     if (FAILED(hr))
         return String();
-    wchar_t uuidStr[40];
+    UChar uuidStr[40];
     int num = StringFromGUID2(uuid, reinterpret_cast<LPOLESTR>(uuidStr), WTF_ARRAY_LENGTH(uuidStr));
     ASSERT(num == 39);
     String canonicalUuidStr = String(uuidStr + 1, num - 3).lower(); // remove opening and closing bracket and make it lower.
diff -ur webkit-1.3.10-orig/Source/WebCore/plugins/gtk/PluginPackageGtk.cpp webkit-1.3.10/Source/WebCore/plugins/gtk/PluginPackageGtk.cpp
--- webkit-1.3.10-orig/Source/WebCore/plugins/gtk/PluginPackageGtk.cpp	2015-06-12 11:00:07.385524477 +0200
+++ webkit-1.3.10/Source/WebCore/plugins/gtk/PluginPackageGtk.cpp	2015-06-13 19:50:11.848809617 +0200
@@ -106,8 +106,9 @@
 
 bool PluginPackage::load()
 {
+#if defined(XP_UNIX)
     if (m_isLoaded) {
-        m_loadCount++;
+        m_loadCount++; 
         return true;
     }
 
@@ -166,6 +167,11 @@
 
 abort:
     unloadWithoutShutdown();
+#else
+    LOG(Plugins,"Module Load Failed :Stuff is not ported\n");
+    return false;
+
+#endif
     return false;
 }
 
diff -ur webkit-1.3.10-orig/Source/WebCore/plugins/gtk/PluginViewGtk.cpp webkit-1.3.10/Source/WebCore/plugins/gtk/PluginViewGtk.cpp
--- webkit-1.3.10-orig/Source/WebCore/plugins/gtk/PluginViewGtk.cpp	2015-06-12 11:00:07.385524477 +0200
+++ webkit-1.3.10/Source/WebCore/plugins/gtk/PluginViewGtk.cpp	2015-06-13 19:50:12.020814232 +0200
@@ -47,6 +47,7 @@
 #include "Image.h"
 #include "KeyboardEvent.h"
 #include "MouseEvent.h"
+#include "NotImplemented.h"
 #include "Page.h"
 #include "PlatformKeyboardEvent.h"
 #include "PlatformMouseEvent.h"
@@ -690,6 +691,7 @@
         gtk_widget_queue_draw(m_parentFrame->view()->hostWindow()->platformPageClient());
 }
 
+#ifndef GDK_WINDOWING_WIN32
 static Display* getPluginDisplay()
 {
     // The plugin toolkit might have a different X connection open.  Since we're
@@ -703,6 +705,7 @@
     return 0;
 #endif
 }
+#endif
 
 #if defined(XP_UNIX)
 static void getVisualAndColormap(int depth, Visual** visual, Colormap* colormap)
@@ -769,6 +772,7 @@
     ASSERT(m_isStarted);
     ASSERT(m_status == PluginStatusLoadedSuccessfully);
 
+#if defined(XP_UNIX)
     if (m_plugin->pluginFuncs()->getvalue) {
         PluginView::setCurrentPluginView(this);
         JSC::JSLock::DropAllLocks dropAllLocks(JSC::SilenceAssertionsOnly);
@@ -777,11 +781,11 @@
         setCallingPlugin(false);
         PluginView::setCurrentPluginView(0);
     }
+#endif
 
     if (m_isWindowed) {
-#if defined(XP_UNIX)
         GtkWidget* pageClient = m_parentFrame->view()->hostWindow()->platformPageClient();
-
+#if defined(XP_UNIX)
         if (m_needsXEmbed) {
             // If our parent is not anchored the startup process will
             // fail miserably for XEmbed plugins a bit later on when
@@ -797,12 +801,18 @@
         } else
             setPlatformWidget(gtk_xtbin_new(pageClient, 0));
 #else
+#if OS(WINDOWS) && !defined(GTK_API_VERSION_2)
+        setPlatformWidget(0);
+#else
         setPlatformWidget(gtk_socket_new());
+#endif
         gtk_container_add(GTK_CONTAINER(pageClient), platformPluginWidget());
 #endif
     } else {
         setPlatformWidget(0);
+#if defined(XP_UNIX)
         m_pluginDisplay = getPluginDisplay();
+#endif
     }
 
     show();
diff -ur webkit-1.3.10-orig/Source/WebCore/plugins/PluginView.cpp webkit-1.3.10/Source/WebCore/plugins/PluginView.cpp
--- webkit-1.3.10-orig/Source/WebCore/plugins/PluginView.cpp	2015-06-12 11:00:07.385524477 +0200
+++ webkit-1.3.10/Source/WebCore/plugins/PluginView.cpp	2015-06-13 19:50:12.020814232 +0200
@@ -340,7 +340,7 @@
 #endif
 
 #if ENABLE(NETSCAPE_PLUGIN_API)
-#ifdef XP_WIN
+#if defined(XP_WIN) && !PLATFORM(GTK)
     // Unsubclass the window
     if (m_isWindowed) {
 #if OS(WINCE)
diff -ur webkit-1.3.10-orig/Source/WebCore/plugins/PluginView.h webkit-1.3.10/Source/WebCore/plugins/PluginView.h
--- webkit-1.3.10-orig/Source/WebCore/plugins/PluginView.h	2015-06-12 11:00:07.385524477 +0200
+++ webkit-1.3.10/Source/WebCore/plugins/PluginView.h	2015-06-13 19:50:12.020814232 +0200
@@ -386,7 +386,7 @@
 
 private:
 
-#if defined(XP_UNIX) || OS(SYMBIAN)
+#if defined(XP_UNIX) || OS(SYMBIAN) || PLATFORM(GTK)
         void setNPWindowIfNeeded();
 #elif defined(XP_MACOSX)
         NP_CGContext m_npCgContext;
diff -ur webkit-1.3.10-orig/Source/WebCore/plugins/win/PluginDatabaseWin.cpp webkit-1.3.10/Source/WebCore/plugins/win/PluginDatabaseWin.cpp
--- webkit-1.3.10-orig/Source/WebCore/plugins/win/PluginDatabaseWin.cpp	2015-06-12 11:00:07.385524477 +0200
+++ webkit-1.3.10/Source/WebCore/plugins/win/PluginDatabaseWin.cpp	2015-06-13 19:50:12.020814232 +0200
@@ -98,15 +98,15 @@
         if (result != ERROR_SUCCESS)
             break;
 
-        WCHAR pathStr[_MAX_PATH];
+        UChar pathStr[_MAX_PATH];
         DWORD pathStrSize = sizeof(pathStr);
         DWORD type;
 
-        result = SHGetValue(key, name, TEXT("Path"), &type, (LPBYTE)pathStr, &pathStrSize);
+        result = SHGetValueW(key, name, L"Path", &type, (LPBYTE)pathStr, &pathStrSize);
         if (result != ERROR_SUCCESS || type != REG_SZ)
             continue;
 
-        paths.add(String(pathStr, pathStrSize / sizeof(WCHAR) - 1));
+        paths.add(String(pathStr, pathStrSize / sizeof(UChar) - 1));
     }
 
     RegCloseKey(key);
@@ -127,7 +127,7 @@
     for (Vector<String>::const_iterator it = m_pluginDirectories.begin(); it != end; ++it) {
         String pattern = *it + "\\*";
 
-        hFind = FindFirstFileW(pattern.charactersWithNullTermination(), &findFileData);
+        hFind = FindFirstFileW(reinterpret_cast<LPCWSTR>(pattern.charactersWithNullTermination()), &findFileData);
 
         if (hFind == INVALID_HANDLE_VALUE)
             continue;
@@ -136,7 +136,7 @@
             if (findFileData.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)
                 continue;
 
-            String filename = String(findFileData.cFileName, wcslen(findFileData.cFileName));
+            String filename = String(reinterpret_cast<UChar*>(findFileData.cFileName), wcslen(findFileData.cFileName));
             if ((!filename.startsWith("np", false) || !filename.endsWith("dll", false)) &&
                 (!equalIgnoringCase(filename, "Plugin.dll") || !it->endsWith("Shockwave 10", false)))
                 continue;
@@ -210,15 +210,15 @@
     HKEY key;
     LONG result;
     
-    result = RegOpenKeyEx(HKEY_LOCAL_MACHINE, TEXT("Software\\Mozilla"), 0, KEY_READ, &key);
+    result = RegOpenKeyExW(HKEY_LOCAL_MACHINE, L"Software\\Mozilla", 0, KEY_READ, &key);
     if (result == ERROR_SUCCESS) {
-        WCHAR name[128];
+        UChar name[128];
         FILETIME lastModified;
 
         // Enumerate subkeys
         for (int i = 0;; i++) {
-            DWORD nameLen = sizeof(name) / sizeof(WCHAR);
-            result = RegEnumKeyExW(key, i, name, &nameLen, 0, 0, 0, &lastModified);
+            DWORD nameLen = sizeof(name) / sizeof(UChar);
+            result = RegEnumKeyExW(key, i, reinterpret_cast<LPWSTR>(name), &nameLen, 0, 0, 0, &lastModified);
 
             if (result != ERROR_SUCCESS)
                 break;
@@ -227,18 +227,18 @@
             HKEY extensionsKey;
 
             // Try opening the key
-            result = RegOpenKeyEx(key, extensionsPath.charactersWithNullTermination(), 0, KEY_READ, &extensionsKey);
+            result = RegOpenKeyExW(key, reinterpret_cast<LPCWSTR>(extensionsPath.charactersWithNullTermination()), 0, KEY_READ, &extensionsKey);
 
             if (result == ERROR_SUCCESS) {
                 // Now get the plugins directory
-                WCHAR pluginsDirectoryStr[_MAX_PATH];
+                UChar pluginsDirectoryStr[_MAX_PATH];
                 DWORD pluginsDirectorySize = sizeof(pluginsDirectoryStr);
                 DWORD type;
 
-                result = RegQueryValueEx(extensionsKey, TEXT("Plugins"), 0, &type, (LPBYTE)&pluginsDirectoryStr, &pluginsDirectorySize);
+                result = RegQueryValueExW(extensionsKey, L"Plugins", 0, &type, (LPBYTE)&pluginsDirectoryStr, &pluginsDirectorySize);
 
                 if (result == ERROR_SUCCESS && type == REG_SZ)
-                    directories.append(String(pluginsDirectoryStr, pluginsDirectorySize / sizeof(WCHAR) - 1));
+                    directories.append(String(pluginsDirectoryStr, pluginsDirectorySize / sizeof(UChar) - 1));
 
                 RegCloseKey(extensionsKey);
             }
@@ -252,33 +252,32 @@
 {
 #if !OS(WINCE)
     // The new WMP Firefox plugin is installed in \PFiles\Plugins if it can't find any Firefox installs
-    WCHAR pluginDirectoryStr[_MAX_PATH + 1];
-    DWORD pluginDirectorySize = ::ExpandEnvironmentStringsW(TEXT("%SYSTEMDRIVE%\\PFiles\\Plugins"), pluginDirectoryStr, WTF_ARRAY_LENGTH(pluginDirectoryStr));
-
+    UChar pluginDirectoryStr[_MAX_PATH + 1];
+    DWORD pluginDirectorySize = ::ExpandEnvironmentStringsW(L"%SYSTEMDRIVE%\\PFiles\\Plugins", reinterpret_cast<LPWSTR>(pluginDirectoryStr), WTF_ARRAY_LENGTH(pluginDirectoryStr));
     if (pluginDirectorySize > 0 && pluginDirectorySize <= WTF_ARRAY_LENGTH(pluginDirectoryStr))
         directories.append(String(pluginDirectoryStr, pluginDirectorySize - 1));
 #endif
 
     DWORD type;
-    WCHAR installationDirectoryStr[_MAX_PATH];
+    UChar installationDirectoryStr[_MAX_PATH];
     DWORD installationDirectorySize = sizeof(installationDirectoryStr);
 
-    HRESULT result = SHGetValue(HKEY_LOCAL_MACHINE, TEXT("Software\\Microsoft\\MediaPlayer"), TEXT("Installation Directory"), &type, (LPBYTE)&installationDirectoryStr, &installationDirectorySize);
+    HRESULT result = SHGetValueW(HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\MediaPlayer", L"Installation Directory", &type, (LPBYTE)&installationDirectoryStr, &installationDirectorySize);
 
     if (result == ERROR_SUCCESS && type == REG_SZ)
-        directories.append(String(installationDirectoryStr, installationDirectorySize / sizeof(WCHAR) - 1));
+        directories.append(String(installationDirectoryStr, installationDirectorySize / sizeof(UChar) - 1));
 }
 
 static inline void addQuickTimePluginDirectory(Vector<String>& directories)
 {
     DWORD type;
-    WCHAR installationDirectoryStr[_MAX_PATH];
+    UChar installationDirectoryStr[_MAX_PATH];
     DWORD installationDirectorySize = sizeof(installationDirectoryStr);
 
-    HRESULT result = SHGetValue(HKEY_LOCAL_MACHINE, TEXT("Software\\Apple Computer, Inc.\\QuickTime"), TEXT("InstallDir"), &type, (LPBYTE)&installationDirectoryStr, &installationDirectorySize);
+    HRESULT result = SHGetValueW(HKEY_LOCAL_MACHINE, L"Software\\Apple Computer, Inc.\\QuickTime", L"InstallDir", &type, (LPBYTE)&installationDirectoryStr, &installationDirectorySize);
 
     if (result == ERROR_SUCCESS && type == REG_SZ) {
-        String pluginDir = String(installationDirectoryStr, installationDirectorySize / sizeof(WCHAR) - 1) + "\\plugins";
+        String pluginDir = String(installationDirectoryStr, installationDirectorySize / sizeof(UChar) - 1) + "\\plugins";
         directories.append(pluginDir);
     }
 }
@@ -286,11 +285,11 @@
 static inline void addAdobeAcrobatPluginDirectory(Vector<String>& directories)
 {
     HKEY key;
-    HRESULT result = RegOpenKeyEx(HKEY_LOCAL_MACHINE, TEXT("Software\\Adobe\\Acrobat Reader"), 0, KEY_READ, &key);
+    HRESULT result = RegOpenKeyExW(HKEY_LOCAL_MACHINE, L"Software\\Adobe\\Acrobat Reader", 0, KEY_READ, &key);
     if (result != ERROR_SUCCESS)
         return;
 
-    WCHAR name[128];
+    UChar name[128];
     FILETIME lastModified;
 
     Vector<int> latestAcrobatVersion;
@@ -298,8 +297,8 @@
 
     // Enumerate subkeys
     for (int i = 0;; i++) {
-        DWORD nameLen = sizeof(name) / sizeof(WCHAR);
-        result = RegEnumKeyExW(key, i, name, &nameLen, 0, 0, 0, &lastModified);
+        DWORD nameLen = sizeof(name) / sizeof(UChar);
+        result = RegEnumKeyExW(key, i, reinterpret_cast<LPWSTR>(name), &nameLen, 0, 0, 0, &lastModified);
 
         if (result != ERROR_SUCCESS)
             break;
@@ -313,14 +312,14 @@
 
     if (!latestAcrobatVersionString.isNull()) {
         DWORD type;
-        WCHAR acrobatInstallPathStr[_MAX_PATH];
+        UChar acrobatInstallPathStr[_MAX_PATH];
         DWORD acrobatInstallPathSize = sizeof(acrobatInstallPathStr);
 
         String acrobatPluginKeyPath = "Software\\Adobe\\Acrobat Reader\\" + latestAcrobatVersionString + "\\InstallPath";
-        result = SHGetValue(HKEY_LOCAL_MACHINE, acrobatPluginKeyPath.charactersWithNullTermination(), 0, &type, (LPBYTE)acrobatInstallPathStr, &acrobatInstallPathSize);
+        result = SHGetValueW(HKEY_LOCAL_MACHINE, reinterpret_cast<LPCWSTR>(acrobatPluginKeyPath.charactersWithNullTermination()), 0, &type, (LPBYTE)acrobatInstallPathStr, &acrobatInstallPathSize);
 
         if (result == ERROR_SUCCESS) {
-            String acrobatPluginDirectory = String(acrobatInstallPathStr, acrobatInstallPathSize / sizeof(WCHAR) - 1) + "\\browser";
+            String acrobatPluginDirectory = String(acrobatInstallPathStr, acrobatInstallPathSize / sizeof(UChar) - 1) + "\\browser";
             directories.append(acrobatPluginDirectory);
         }
     }
@@ -331,11 +330,11 @@
 static inline void addJavaPluginDirectory(Vector<String>& directories)
 {
     HKEY key;
-    HRESULT result = RegOpenKeyEx(HKEY_LOCAL_MACHINE, TEXT("Software\\JavaSoft\\Java Plug-in"), 0, KEY_READ, &key);
+    HRESULT result = RegOpenKeyExW(HKEY_LOCAL_MACHINE, L"Software\\JavaSoft\\Java Plug-in", 0, KEY_READ, &key);
     if (result != ERROR_SUCCESS)
         return;
 
-    WCHAR name[128];
+    UChar name[128];
     FILETIME lastModified;
 
     Vector<int> latestJavaVersion;
@@ -343,8 +342,8 @@
 
     // Enumerate subkeys
     for (int i = 0;; i++) {
-        DWORD nameLen = sizeof(name) / sizeof(WCHAR);
-        result = RegEnumKeyExW(key, i, name, &nameLen, 0, 0, 0, &lastModified);
+        DWORD nameLen = sizeof(name) / sizeof(UChar);
+        result = RegEnumKeyExW(key, i, reinterpret_cast<LPWSTR>(name), &nameLen, 0, 0, 0, &lastModified);
 
         if (result != ERROR_SUCCESS)
             break;
@@ -358,18 +357,18 @@
 
     if (!latestJavaVersionString.isEmpty()) {
         DWORD type;
-        WCHAR javaInstallPathStr[_MAX_PATH];
+        UChar javaInstallPathStr[_MAX_PATH];
         DWORD javaInstallPathSize = sizeof(javaInstallPathStr);
         DWORD useNewPluginValue;
         DWORD useNewPluginSize;
 
         String javaPluginKeyPath = "Software\\JavaSoft\\Java Plug-in\\" + latestJavaVersionString;
-        result = SHGetValue(HKEY_LOCAL_MACHINE, javaPluginKeyPath.charactersWithNullTermination(), TEXT("UseNewJavaPlugin"), &type, (LPVOID)&useNewPluginValue, &useNewPluginSize);
+        result = SHGetValueW(HKEY_LOCAL_MACHINE, reinterpret_cast<LPCWSTR>(javaPluginKeyPath.charactersWithNullTermination()), L"UseNewJavaPlugin", &type, (LPVOID)&useNewPluginValue, &useNewPluginSize);
 
         if (result == ERROR_SUCCESS && useNewPluginValue == 1) {
-            result = SHGetValue(HKEY_LOCAL_MACHINE, javaPluginKeyPath.charactersWithNullTermination(), TEXT("JavaHome"), &type, (LPBYTE)javaInstallPathStr, &javaInstallPathSize);
+            result = SHGetValueW(HKEY_LOCAL_MACHINE, reinterpret_cast<LPCWSTR>(javaPluginKeyPath.charactersWithNullTermination()), L"JavaHome", &type, (LPBYTE)javaInstallPathStr, &javaInstallPathSize);
             if (result == ERROR_SUCCESS) {
-                String javaPluginDirectory = String(javaInstallPathStr, javaInstallPathSize / sizeof(WCHAR) - 1) + "\\bin\\new_plugin";
+                String javaPluginDirectory = String(javaInstallPathStr, javaInstallPathSize / sizeof(UChar) - 1) + "\\bin\\new_plugin";
                 directories.append(javaPluginDirectory);
             }
         }
@@ -380,19 +379,19 @@
 
 static inline String safariPluginsDirectory()
 {
-    WCHAR moduleFileNameStr[_MAX_PATH];
+    UChar moduleFileNameStr[_MAX_PATH];
     static String pluginsDirectory;
     static bool cachedPluginDirectory = false;
 
     if (!cachedPluginDirectory) {
         cachedPluginDirectory = true;
 
-        int moduleFileNameLen = GetModuleFileName(0, moduleFileNameStr, _MAX_PATH);
+        int moduleFileNameLen = GetModuleFileNameW(0, reinterpret_cast<LPWSTR>(moduleFileNameStr), _MAX_PATH);
 
         if (!moduleFileNameLen || moduleFileNameLen == _MAX_PATH)
             goto exit;
 
-        if (!PathRemoveFileSpec(moduleFileNameStr))
+        if (!PathRemoveFileSpecW(reinterpret_cast<LPWSTR>(moduleFileNameStr)))
             goto exit;
 
         pluginsDirectory = String(moduleFileNameStr) + "\\Plugins";
@@ -404,17 +403,17 @@
 static inline void addMacromediaPluginDirectories(Vector<String>& directories)
 {
 #if !OS(WINCE)
-    WCHAR systemDirectoryStr[MAX_PATH];
+    UChar systemDirectoryStr[MAX_PATH];
 
-    if (!GetSystemDirectory(systemDirectoryStr, WTF_ARRAY_LENGTH(systemDirectoryStr)))
+    if (!GetSystemDirectoryW(reinterpret_cast<LPWSTR>(systemDirectoryStr), WTF_ARRAY_LENGTH(systemDirectoryStr)))
         return;
 
-    WCHAR macromediaDirectoryStr[MAX_PATH];
+    UChar macromediaDirectoryStr[MAX_PATH];
 
-    PathCombine(macromediaDirectoryStr, systemDirectoryStr, TEXT("macromed\\Flash"));
+    PathCombineW(reinterpret_cast<LPWSTR>(macromediaDirectoryStr), reinterpret_cast<LPWSTR>(systemDirectoryStr), L"macromed\\Flash");
     directories.append(macromediaDirectoryStr);
 
-    PathCombine(macromediaDirectoryStr, systemDirectoryStr, TEXT("macromed\\Shockwave 10"));
+    PathCombineW(reinterpret_cast<LPWSTR>(macromediaDirectoryStr), reinterpret_cast<LPWSTR>(systemDirectoryStr), L"macromed\\Shockwave 10");
     directories.append(macromediaDirectoryStr);
 #endif
 }
diff -ur webkit-1.3.10-orig/Tools/GNUmakefile.am webkit-1.3.10/Tools/GNUmakefile.am
--- webkit-1.3.10-orig/Tools/GNUmakefile.am	2015-06-12 11:00:07.609530606 +0200
+++ webkit-1.3.10/Tools/GNUmakefile.am	2015-06-13 19:50:12.020814232 +0200
@@ -1,7 +1,5 @@
 noinst_PROGRAMS += \
-	Programs/DumpRenderTree \
-	Programs/GtkLauncher \
-	Programs/ImageDiff
+	Programs/GtkLauncher
 
 # GtkLauncher
 Programs_GtkLauncher_CPPFLAGS = \
diff -ur webkit-1.3.10-orig/WebKit/gtk/GNUmakefile.am webkit-1.3.10/WebKit/gtk/GNUmakefile.am
--- webkit-1.3.10-orig/WebKit/gtk/GNUmakefile.am	2015-06-12 11:00:07.649531701 +0200
+++ webkit-1.3.10/WebKit/gtk/GNUmakefile.am	2015-06-14 12:05:08.038871631 +0200
@@ -9,6 +9,7 @@
 nodist_libwebkitgtk_@WEBKITGTK_API_MAJOR_VERSION@_@WEBKITGTK_API_MINOR_VERSION@_la_SOURCES = \
 	$(webkitgtk_built_sources)
 
+
 libwebkitgtk_@WEBKITGTK_API_MAJOR_VERSION@_@WEBKITGTK_API_MINOR_VERSION@_ladir = $(prefix)/include/webkit-@WEBKITGTK_API_VERSION@/webkit
 libwebkitgtk_@WEBKITGTK_API_MAJOR_VERSION@_@WEBKITGTK_API_MINOR_VERSION@_la_HEADERS = \
 	$(webkitgtk_static_h_api)
@@ -70,7 +71,7 @@
 	$(no_undefined)
 
 libwebkitgtk_@WEBKITGTK_API_MAJOR_VERSION@_@WEBKITGTK_API_MINOR_VERSION@_la_LIBADD = \
-	-lpthread \
+	-lpthread -lz \
 	libWebCore.la \
 	libJavaScriptCore.la \
 	$(webcore_ldflags) \
@@ -374,181 +375,6 @@
 dist_resources_DATA = \
 	$(shell ls $(srcdir)/WebKit/gtk/resources/*.html)
 
-# Build unit tests
-noinst_PROGRAMS += $(TEST_PROGS)
-webkit_tests_cflags = \
-	-fno-strict-aliasing \
-	-I$(srcdir)/Source/JavaScriptCore/ForwardingHeaders \
-	-I$(WebCore)/platform/network/soup/cache \
-	-I$(WebKit) \
-	-I$(GENSOURCES) \
-	-I$(top_builddir)/WebKit/gtk \
-	-I$(top_srcdir)/Source/WebCore/bindings \
-	-I$(top_srcdir)/Source/WebCore/bindings/gobject \
-	$(global_cppflags) \
-	$(global_cflags) \
-	$(javascriptcore_cppflags) \
-	$(GLIB_CFLAGS) \
-	$(GTK_CFLAGS) \
-	$(LIBSOUP_CFLAGS)
-
-webkit_tests_ldadd = \
-	libwebkitgtk-@WEBKITGTK_API_MAJOR_VERSION@.@WEBKITGTK_API_MINOR_VERSION@.la \
-	$(GTK_LIBS) \
-	$(GLIB_LIBS) \
-	$(LIBSOUP_LIBS)
-
-webkit_tests_ldflags = \
-	-no-install \
-	-no-fast-install
-
-TEST_PROGS += \
-	Programs/unittests/testdomdocument \
-	Programs/unittests/testdomdomwindow \
-	Programs/unittests/testdomnode \
-	Programs/unittests/testhttpbackend \
-	Programs/unittests/testloading \
-	Programs/unittests/testglobals \
-	Programs/unittests/testmimehandling \
-	Programs/unittests/testnetworkrequest \
-	Programs/unittests/testnetworkresponse \
-	Programs/unittests/testwebframe \
-	Programs/unittests/testwebbackforwardlist \
-	Programs/unittests/testwebhistoryitem \
-	Programs/unittests/testwindow \
-	Programs/unittests/testdownload \
-	Programs/unittests/testatk \
-	Programs/unittests/testatkroles \
-	Programs/unittests/testhittestresult \
-	Programs/unittests/testwebsettings \
-	Programs/unittests/testwebresource \
-	Programs/unittests/testwebdatasource \
-	Programs/unittests/testwebplugindatabase \
-	Programs/unittests/testwebview \
-	Programs/unittests/testkeyevents \
-	Programs/unittests/testcopyandpaste
-
-# Add additional tests here
-Programs_unittests_testdomdocument_SOURCES = WebKit/gtk/tests/testdomdocument.c
-Programs_unittests_testdomdocument_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testdomdocument_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testdomdocument_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testdomdomwindow_SOURCES = WebKit/gtk/tests/testdomdomwindow.c
-Programs_unittests_testdomdomwindow_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testdomdomwindow_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testdomdomwindow_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testdomnode_SOURCES = WebKit/gtk/tests/testdomnode.c
-Programs_unittests_testdomnode_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testdomnode_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testdomnode_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testhttpbackend_SOURCES = WebKit/gtk/tests/testhttpbackend.c
-Programs_unittests_testhttpbackend_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testhttpbackend_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testhttpbackend_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testglobals_SOURCES = WebKit/gtk/tests/testglobals.c
-Programs_unittests_testglobals_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testglobals_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testglobals_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testloading_SOURCES = WebKit/gtk/tests/testloading.c
-Programs_unittests_testloading_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testloading_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testloading_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testmimehandling_SOURCES = WebKit/gtk/tests/testmimehandling.c WebKit/gtk/tests/test_utils.c
-Programs_unittests_testmimehandling_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testmimehandling_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testmimehandling_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testnetworkrequest_SOURCES = WebKit/gtk/tests/testnetworkrequest.c
-Programs_unittests_testnetworkrequest_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testnetworkrequest_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testnetworkrequest_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testnetworkresponse_SOURCES = WebKit/gtk/tests/testnetworkresponse.c
-Programs_unittests_testnetworkresponse_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testnetworkresponse_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testnetworkresponse_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testwebframe_SOURCES = WebKit/gtk/tests/testwebframe.c
-Programs_unittests_testwebframe_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testwebframe_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testwebframe_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testwebplugindatabase_SOURCES = WebKit/gtk/tests/testwebplugindatabase.c
-Programs_unittests_testwebplugindatabase_CFLAGS = -DTEST_PLUGIN_DIR=\"${shell pwd}/${top_builddir}/TestNetscapePlugin/.libs\" $(webkit_tests_cflags)
-Programs_unittests_testwebplugindatabase_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testwebplugindatabase_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testwebbackforwardlist_SOURCES = WebKit/gtk/tests/testwebbackforwardlist.c
-Programs_unittests_testwebbackforwardlist_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testwebbackforwardlist_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testwebbackforwardlist_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testwebhistoryitem_SOURCES = WebKit/gtk/tests/testwebhistoryitem.c
-Programs_unittests_testwebhistoryitem_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testwebhistoryitem_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testwebhistoryitem_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testwindow_SOURCES = WebKit/gtk/tests/testwindow.c
-Programs_unittests_testwindow_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testwindow_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testwindow_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testdownload_SOURCES = WebKit/gtk/tests/testdownload.c
-Programs_unittests_testdownload_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testdownload_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testdownload_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testatk_SOURCES = WebKit/gtk/tests/testatk.c
-Programs_unittests_testatk_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testatk_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testatk_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testatkroles_SOURCES = WebKit/gtk/tests/testatkroles.c
-Programs_unittests_testatkroles_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testatkroles_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testatkroles_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testwebsettings_SOURCES = WebKit/gtk/tests/testwebsettings.c
-Programs_unittests_testwebsettings_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testwebsettings_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testwebsettings_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testwebresource_SOURCES = WebKit/gtk/tests/testwebresource.c
-Programs_unittests_testwebresource_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testwebresource_LDADD = $(webkit_tests_ldadd)
-
-Programs_unittests_testwebdatasource_SOURCES = WebKit/gtk/tests/testwebdatasource.c
-Programs_unittests_testwebdatasource_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testwebdatasource_LDADD = $(webkit_tests_ldadd)
-
-Programs_unittests_testwebview_SOURCES = WebKit/gtk/tests/testwebview.c WebKit/gtk/tests/test_utils.c
-Programs_unittests_testwebview_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testwebview_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testwebview_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testhittestresult_SOURCES = WebKit/gtk/tests/testhittestresult.c
-Programs_unittests_testhittestresult_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testhittestresult_LDADD = $(webkit_tests_ldadd)
-
-Programs_unittests_testkeyevents_SOURCES = WebKit/gtk/tests/testkeyevents.c
-Programs_unittests_testkeyevents_CFLAGS = $(webkit_tests_cflags)
-Programs_unittests_testkeyevents_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testkeyevents_LDFLAGS = $(webkit_tests_ldflags)
-
-Programs_unittests_testcopyandpaste_SOURCES = WebKit/gtk/tests/testcopyandpaste.c \
-	Source/WebCore/platform/gtk/GtkVersioning.c
-Programs_unittests_testcopyandpaste_CFLAGS = $(webkit_tests_cflags) \
-	-I$(srcdir)/Source/WebCore/platform/gtk \
-	-I$(srcdir)/Source/WebCore
-Programs_unittests_testcopyandpaste_LDADD = $(webkit_tests_ldadd)
-Programs_unittests_testcopyandpaste_LDFLAGS = $(webkit_tests_ldflags)
-
 # Project-wide clean rules
 # Files that will be cleaned
 CLEANFILES += \
@@ -571,23 +397,3 @@
 install-data-local: po-install-data-local
 installdirs-data-local: po-installdirs-data-local
 uninstall-local: po-uninstall-local
-
-# Run all tests in cwd
-# FIXME: we should run this under xvfb
-test: $(TEST_PROGS)
-	$(GTESTER) --verbose $(TEST_PROGS);
-
-# test-report: run tests in cwd and generate report
-# full-report: run tests in cwd with -m perf and -m slow and generate report
-# perf-report: run tests in cwd with -m perf and generate report
-test-report full-report perf-report: $(TEST_PROGS)
-	@ case $@ in \
-	  test-report) test_options="-k";; \
-	  full-report) test_options="-k -m=perf";; \
-	  perf-report) test_options="-k -m=perf -m=slow";; \
-	  esac ; \
-	  $(GTESTER) --verbose $$test_options -o test-report.xml $(TEST_PROGS); \
-	  $(GTESTER_REPORT) test-report.xml > test-report.html ;
-
-.PHONY: test test-report perf-report full-report
-check-local: test
diff -ur webkit-1.3.10-orig/WebKit/gtk/po/GNUmakefile.am webkit-1.3.10/WebKit/gtk/po/GNUmakefile.am
--- webkit-1.3.10-orig/WebKit/gtk/po/GNUmakefile.am	2015-06-12 11:00:07.653531811 +0200
+++ webkit-1.3.10/WebKit/gtk/po/GNUmakefile.am	2015-06-13 19:50:12.020814232 +0200
@@ -27,7 +27,7 @@
 
 POFILES += $(shell ls $(srcdir)/WebKit/gtk/po/*.po)
 
-MOFILES += $(shell echo $(POFILES) | tr ' ' '\n' | sed "s,^$(srcdir)/,,g" | sed 's/\.po/.mo/g')
+MOFILES += $(shell echo $(POFILES) | tr ' ' '\n' | sed "s,^$(srcdir)/,$(builddir)/,g" | sed 's/\.po/.mo/g')
 
 .po.mo:
 	test -d WebKit/gtk/po/ || mkdir -p WebKit/gtk/po/
@@ -111,6 +111,9 @@
 update-po: GNUmakefile
 	$(MAKE) $(DOMAIN).pot-update
 	$(MAKE) update-po-files
+	update-mo
+
+update-mo: GNUmakefile
 	$(MAKE) $(MOFILES)
 
 .nop.po-create:
@@ -128,7 +131,7 @@
 DISTCLEANFILES += \
 	$(MOFILES)
 
-po-install-data-local: all
+po-install-data-local: update-mo all
 	$(mkdir_p) $(DESTDIR)$(datadir)
 	@catalogs='$(MOFILES)'; \
 	for cat in $$catalogs; do \
@@ -136,7 +139,7 @@
 	  lang=`echo $$cat | sed -e 's/\.mo$$//'`; \
 	  dir=$(localedir)/$$lang/LC_MESSAGES; \
 	  $(mkdir_p) $(DESTDIR)$$dir; \
-	  if test -r WebKit/gtk/po/$$cat; then realcat=WebKit/gtk/po/$$cat; else realcat=$(srcdir)/$$cat; fi; \
+	  if test -r WebKit/gtk/po/$$cat; then realcat=WebKit/gtk/po/$$cat; else realcat=$(builddir)/WebKit/gtk/po/$$cat; fi; \
 	  $(INSTALL_DATA) $$realcat $(DESTDIR)$$dir/$(DOMAIN).mo; \
 	  echo "installing $$realcat as $(DESTDIR)$$dir/$(DOMAIN).mo"; \
 	  for lc in '' $(EXTRA_LOCALE_CATEGORIES); do \
diff -ur webkit-1.3.10-orig/WebKit/gtk/webkit/webkitglobals.cpp webkit-1.3.10/WebKit/gtk/webkit/webkitglobals.cpp
--- webkit-1.3.10-orig/WebKit/gtk/webkit/webkitglobals.cpp	2015-06-12 11:00:07.657531920 +0200
+++ webkit-1.3.10/WebKit/gtk/webkit/webkitglobals.cpp	2015-06-13 19:50:12.020814232 +0200
@@ -206,7 +206,7 @@
         return NULL;
 
     GtkWidget* toplevel =  gtk_widget_get_toplevel(GTK_WIDGET(context->coreFrame()->page()->chrome()->platformPageClient()));
-    if (gtk_widget_is_toplevel(toplevel))
+    if (GTK_WIDGET_TOPLEVEL(toplevel))
         return toplevel;
     else
         return NULL;

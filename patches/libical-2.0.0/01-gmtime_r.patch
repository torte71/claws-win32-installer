#! /bin/sh
patch -p1 -f $* < $0
exit $?

diff -ruN libical-2.0.0-orig/config.h.cmake libical-2.0.0/config.h.cmake
--- libical-2.0.0-orig/config.h.cmake	2015-12-28 22:44:53.000000000 +0100
+++ libical-2.0.0/config.h.cmake	2017-01-28 17:58:18.365969029 +0100
@@ -495,34 +495,6 @@
 #endif
 #endif
 
-/* gmtime_r - thread safe gmtime() really only needed on Unix */
-#if !defined(HAVE_GMTIME_R)
-#if !defined(_WIN32)
-#error "No thread-safe gmtime function available"
-#endif
-/*on Windows there might be a macro called gmtime_r in pthread.h. don't use it.*/
-#if defined(gmtime_r)
-#undef gmtime_r
-#endif
-/* FYI: The gmtime() in Microsoft's C library is MT-safe */
-#define gmtime_r(tp,tmp) (gmtime(tp)?(*(tmp)=*gmtime(tp),(tmp)):0)
-#endif
-#include <time.h>
-
-/* localtime_r - thread safe localtime() really only needed on Unix */
-#if !defined(HAVE_LOCALTIME_R)
-#if !defined(_WIN32)
-#error "No thread-safe localtime function available"
-#endif
-/*on Windows there might be a macro called localtime_r in pthread.h. don't use it.*/
-#if defined(localtime_r)
-#undef localtime_r
-#endif
-/* FYI: The localtime() in Microsoft's C library is MT-safe */
-#define localtime_r(tp,tmp) (localtime(tp)?(*(tmp)=*localtime(tp),(tmp)):0)
-#endif
-#include <time.h>
-
 /* define MAXPATHLEN */
 #if defined(_WIN32)
 #include <windows.h> //for MAX_PATH
diff -ruN libical-2.0.0-orig/ConfigureChecks.cmake libical-2.0.0/ConfigureChecks.cmake
--- libical-2.0.0-orig/ConfigureChecks.cmake	2015-12-28 22:44:53.000000000 +0100
+++ libical-2.0.0/ConfigureChecks.cmake	2017-01-28 14:16:30.568151735 +0100
@@ -10,6 +10,7 @@
 check_include_files(fcntl.h HAVE_FCNTL_H)
 check_include_files(unistd.h HAVE_UNISTD_H)
 check_include_files(wctype.h HAVE_WCTYPE_H)
+check_include_files(time.h HAVE_TIME_H)
 
 include(CheckFunctionExists)
 if(WIN32 AND MSVC)
diff -ruN libical-2.0.0-orig/Toolchain-mingw32.cmake libical-2.0.0/Toolchain-mingw32.cmake
--- libical-2.0.0-orig/Toolchain-mingw32.cmake	1970-01-01 01:00:00.000000000 +0100
+++ libical-2.0.0/Toolchain-mingw32.cmake	2017-01-28 14:05:21.057799373 +0100
@@ -0,0 +1,17 @@
+# the name of the target operating system
+SET(CMAKE_SYSTEM_NAME Windows)
+
+# which compilers to use for C and C++
+SET(CMAKE_C_COMPILER i686-w64-mingw32-gcc)
+SET(CMAKE_CXX_COMPILER i686-w64-mingw32-g++)
+SET(CMAKE_RC_COMPILER i686-w64-mingw32-windres)
+
+# here is the target environment located
+SET(CMAKE_FIND_ROOT_PATH /usr/i686-w64-mingw32)
+
+# adjust the default behaviour of the FIND_XXX() commands:
+# search headers and libraries in the target environment, search 
+# programs in the host environment
+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
